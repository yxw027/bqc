/********************************************************************
* 版权所有（C）2015，广州海格通信集团股份有限公司
* 
* 文件名称：func_Time.cpp
* 内容摘要：时间转换
*           通用时、儒略日、GPS时、年积日之间相互转换
*           时间加减运算
* 其他说明：本程序的时间基准是GPS时，用周+秒表示
* 版本  号：
* 作    者：sbz
* 完成日期：2015-11-19
*
* 修改记录1：
*    修改日期：
*    版本  号：
*    修改  人：
*    修改内容：
* 修改记录2：
********************************************************************/

/******************************************************************************
*                          包含的头文件                                       *
******************************************************************************/
#include "def_convrnx.h"

/******************************************************************************
*    函数名称:  YMD2JDay
*    功能描述:  通用时转换为儒略日
*    输入参数:  通用时
*    输出参数:  无
*    返 回 值:  儒略日
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern FP64 YMD2JDay(T_YMD tYmd)           
{
	FP64 dJd;
	INT32U iYr,iMo;
	FP64 dH;

	if (tYmd.iMon>2)
	{
		iYr=tYmd.iYear;
		iMo=tYmd.iMon;
	}
	else
	{
		iYr=tYmd.iYear-1;
		iMo=tYmd.iMon+12;
	}
	dH=tYmd.iHor+tYmd.iMin/60.0+tYmd.dSec/3600;
	dJd=(int)(365.25*iYr)+(int)(30.6001*(iMo+1))+tYmd.iDay+dH/24+1720981.5;
	return dJd;
}

/******************************************************************************
*    函数名称:  JDay2YMD
*    功能描述:  儒略日转换为通用时
*    输入参数:  儒略日
*    输出参数:  无
*    返 回 值:  通用时
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern T_YMD JDay2YMD(FP64 dJd)             
{
	T_YMD tYmd;
	INT32U a,b,c,d,e;
	FP64 dH;

	a=(int)(dJd+0.5);
	b=a+1537;
	c=(int)((b-122.1)/365.25);
	d=(int)(365.25*c);
	e=(int)((b-d)/30.6001);
	tYmd.iDay=b-d-(int)(30.6001*e);             /*日*/
	tYmd.iMon=e-1-12*(int)(e/14);               /*月*/
	tYmd.iYear=c-4715-(int)((7+tYmd.iMon)/10);  /*年*/
	if ((dJd-(int)(dJd))>=0.5)                  /*不足一天的时间*/
	{
		dH=dJd-(int)(dJd)-0.5;
	}
	else
	{
		dH=dJd-(int)(dJd)+0.5;
	}
	tYmd.iHor=(int)(dH*24);
	tYmd.iMin=(int)((dH*24-tYmd.iHor)*60);
	tYmd.dSec=((dH*24-tYmd.iHor)*60-tYmd.iMin)*60;
	return tYmd;
}

/******************************************************************************
*    函数名称:  WeekSec2JDay
*    功能描述:  GPS时转化为儒略日
*    输入参数:  GPS时
*    输出参数:  无
*    返 回 值:  儒略日
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern FP64 WeekSec2JDay(T_WEEKSEC tWSec)    
{
	FP64 dJd;

	dJd=tWSec.iWeek*7+tWSec.dSow/D2S+GPST0;
	return dJd;
}

/******************************************************************************
*    函数名称:  JDay2WeekSec
*    功能描述:  儒略日转换为GPS时
*    输入参数:  儒略日
*    输出参数:  无
*    返 回 值:  GPS时
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern T_WEEKSEC JDay2WeekSec(FP64 dJd)             
{
	T_WEEKSEC tWSec;

	tWSec.iWeek=(int)((dJd-GPST0)/7);
	tWSec.dSow=(dJd-GPST0-tWSec.iWeek*7)*D2S;
	return tWSec;
}

/******************************************************************************
*    函数名称:  WeekSec2YMD
*    功能描述:  GPS时转换为通用时
*    输入参数:  GPS时
*    输出参数:  无
*    返 回 值:  通用时
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern T_YMD WeekSec2YMD(T_WEEKSEC tWSec)          
{
    FP64 dJd;
    T_YMD tYmd;

    dJd=WeekSec2JDay(tWSec);
    tYmd=JDay2YMD(dJd);
    return tYmd;
}

/******************************************************************************
*    函数名称:  YMD2WeekSec
*    功能描述:  通用时转换为GPS时
*    输入参数:  通用时
*    输出参数:  无
*    返 回 值:  GPS时
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern T_WEEKSEC YMD2WeekSec(T_YMD tYmd)              
{
	FP64 dJd;
	T_WEEKSEC tWSec;

	dJd=YMD2JDay(tYmd);
	tWSec=JDay2WeekSec(dJd);
	return tWSec;
}

/******************************************************************************
*    函数名称:  YMD2DOY
*    功能描述:  通用时转换为年积日
*    输入参数:  通用时
*    输出参数:  无
*    返 回 值:  年积日
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern T_YEARDAY YMD2DOY(T_YMD tYmd)
{
	T_YEARDAY tDoy;
	FP64 dJd,dJd0;
	T_YMD tYmd0={0};

	tYmd0.iYear=tYmd.iYear;
	tYmd0.iMon =1;
	tYmd0.iDay =1;
	dJd =YMD2JDay(tYmd);
	dJd0=YMD2JDay(tYmd0);
	tDoy.iYear=tYmd.iYear;
	tDoy.iDoy=(int)(dJd-dJd0)+1;
	return tDoy;
}

/******************************************************************************
*    函数名称:  WeekSec2DOY
*    功能描述:  GPS时转换为年积日
*    输入参数:  GPS时
*    输出参数:  无
*    返 回 值:  年积日
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern T_YEARDAY WeekSec2DOY(T_WEEKSEC tWSec)
{
	T_YEARDAY tDoy;
	T_YMD tYmd;

	tYmd=WeekSec2YMD(tWSec);
	tDoy=YMD2DOY(tYmd);
	return tDoy;
}

/******************************************************************************
*    函数名称:  TimeAdd
*    功能描述:  时间加
*    输入参数:  GPS时，秒数
*    输出参数:  无
*    返 回 值:  GPS时
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern T_WEEKSEC TimeAdd(T_WEEKSEC tWSec,FP64 dSec)
{
	FP64 dTmp;

	dTmp=tWSec.dSow+dSec;
	if (dTmp<0)
	{
		tWSec.iWeek=tWSec.iWeek-1;
		tWSec.dSow=dTmp+7*D2S;
	}
	else if (dTmp>=7*D2S)
	{
		tWSec.iWeek=tWSec.iWeek+1;
		tWSec.dSow=dTmp-7*D2S;
	}
	else
	{
		tWSec.dSow=dTmp;
	}
    return tWSec;
}

/******************************************************************************
*    函数名称:  TimeDiff
*    功能描述:  时间做差
*    输入参数:  GPS时，GPS时
*    输出参数:  无
*    返 回 值:  秒数
*    修改日期          版本号          修改人      修改内容
* -----------------------------------------------------------------------------
*
******************************************************************************/
extern FP64 TimeDiff(T_WEEKSEC tWSec1,T_WEEKSEC tWSec2)
{
	FP64 dDSec;

	dDSec=(tWSec1.iWeek*7*D2S+tWSec1.dSow)-(tWSec2.iWeek*7*D2S+tWSec2.dSow);
    return dDSec;
}






